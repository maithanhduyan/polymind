{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Clean Test Files",
      "type": "shell",
      "command": "python",
      "args": [
        "${workspaceFolder}\\.tools\\clean_test_file_in_workspace.py"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "options": {
        "shell": {
          "executable": "powershell.exe",
          "args": [
            "-NoProfile",
            "-ExecutionPolicy",
            "Bypass",
            "-Command"
          ]
        },
        "env": {
          "TERM": "xterm-256color",
          "FORCE_COLOR": "1",
          "PYTHONUNBUFFERED": "1"
        }
      },
      "problemMatcher": [],
      "detail": "Xóa tất cả file test_*.py trong workspace với rich terminal output",
      "runOptions": {
        "runOn": "default"
      }
    },
    {
      "label": "Kill Python Processes",
      "type": "shell",
      "command": "powershell.exe",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass",
        "-Command",
        "Write-Host 'Checking for Python processes...' -ForegroundColor Yellow; $processes = Get-Process -Name python -ErrorAction SilentlyContinue; if ($processes) { Write-Host \"Found $($processes.Count) Python process(es). Killing...\" -ForegroundColor Red; $processes | Stop-Process -Force; Write-Host 'All Python processes killed.' -ForegroundColor Green } else { Write-Host 'No Python processes found running.' -ForegroundColor Green }"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": [],
      "detail": "Safely kill all Python processes with proper error handling",
      "runOptions": {
        "runOn": "default"
      }
    },
    {
      "label": "Kill NodeJS Processes",
      "type": "shell",
      "command": "powershell.exe",
      "args": [
        "-NoProfile",
        "-ExecutionPolicy",
        "Bypass",
        "-Command",
        "Write-Host 'Checking for Node.js processes...' -ForegroundColor Yellow; $processes = Get-Process -Name node -ErrorAction SilentlyContinue; if ($processes) { Write-Host \"Found $($processes.Count) Node.js process(es). Killing...\" -ForegroundColor Red; $processes | Stop-Process -Force; Write-Host 'All Node.js processes killed.' -ForegroundColor Green } else { Write-Host 'No Node.js processes found running.' -ForegroundColor Green }"
      ],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": [],
      "detail": "Safely kill all Node.js processes with proper error handling",
      "runOptions": {
        "runOn": "default"
      }
    },
    {
      "label": "Build MCP Server",
      "type": "shell",
      "command": "npm",
      "args": [
        "run",
        "build"
      ],
      "group": "build",
      "options": {
        "cwd": "${workspaceFolder}/mcp-server"
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": true,
        "panel": "dedicated",
        "showReuseMessage": false,
        "clear": true
      },
      "problemMatcher": [
        "$tsc"
      ],
      "detail": "Build MCP server",
      "runOptions": {
        "runOn": "default"
      }
    }
  ]
}