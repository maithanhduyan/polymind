# Production Dockerfile for PolyMind MCP Server
# Generated by Copilot

# Use official Node.js LTS Alpine image for smaller size and security
FROM node:18-alpine AS base

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apk add --no-cache \
    curl \
    dumb-init \
    && rm -rf /var/cache/apk/*

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S mcp -u 1001 -G nodejs

# ==============================================
# Dependencies stage
# ==============================================
FROM base AS deps

# Copy package files
COPY package*.json ./

# Install production dependencies only
RUN npm ci --only=production --no-audit --no-fund && \
    npm cache clean --force

# ==============================================
# Build stage
# ==============================================
FROM base AS build

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./

# Install all dependencies (including dev dependencies for build)
RUN npm ci --no-audit --no-fund

# Copy source code
COPY src/ ./src/

# Build TypeScript to JavaScript
RUN npm run build && \
    npm prune --production

# ==============================================
# Production stage
# ==============================================
FROM base AS production

# Set production environment
ENV NODE_ENV=production
ENV MCP_PORT=3000
ENV LOG_LEVEL=info

# Copy production dependencies
COPY --from=deps --chown=mcp:nodejs /app/node_modules ./node_modules

# Copy built application
COPY --from=build --chown=mcp:nodejs /app/dist ./dist
COPY --from=build --chown=mcp:nodejs /app/package*.json ./

# Create necessary directories
RUN mkdir -p /var/log/polymind && \
    chown -R mcp:nodejs /var/log/polymind

# Create health check script
RUN echo '#!/bin/sh\ncurl -f http://localhost:$MCP_PORT/health || exit 1' > /usr/local/bin/healthcheck && \
    chmod +x /usr/local/bin/healthcheck

# Switch to non-root user
USER mcp

# Expose port
EXPOSE 3000

# Add labels for better Docker management
LABEL maintainer="PolyMind Team <admin@polymind.com>"
LABEL version="1.0.0"
LABEL description="PolyMind MCP Server - Production Ready"
LABEL org.opencontainers.image.title="PolyMind MCP Server"
LABEL org.opencontainers.image.description="Multi-service MCP server with Vietnamese language support"
LABEL org.opencontainers.image.version="1.0.0"
LABEL org.opencontainers.image.vendor="PolyMind"
LABEL org.opencontainers.image.licenses="MIT"
LABEL org.opencontainers.image.source="https://github.com/maithanhduyan/polymind"

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD /usr/local/bin/healthcheck

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start the application
CMD ["node", "dist/server.js"]
