# Generated by Copilot
"""
Application Factory for PolyMind

Creates and configures the FastAPI application with all components.
"""

from pathlib import Path
from fastapi import FastAPI
from fastapi.staticfiles import StaticFiles
from fastapi.responses import FileResponse

from .core.lifecycle import lifespan
from .routes.chat import router as chat_router
from .services.health import router as health_router
from .websocket.chat_handler import chat_handler


def create_app() -> FastAPI:
    """
    Create and configure FastAPI application.

    Returns:
        Configured FastAPI application instance
    """
    # Create FastAPI app with lifespan events
    app = FastAPI(
        title="PolyMind App",
        description="Fast modern AI service framework",
        version="1.0.0",
        lifespan=lifespan,
    )

    # Mount static files
    static_path = Path("frontend")
    if static_path.exists():
        app.mount("/static", StaticFiles(directory=str(static_path)), name="static")

    # Include routers
    app.include_router(health_router)
    app.include_router(chat_router)

    # Add WebSocket endpoint
    app.websocket("/ws/chat")(chat_handler.handle_websocket)

    # Add frontend routes
    _add_frontend_routes(app)

    return app


def _add_frontend_routes(app: FastAPI):
    """Add frontend serving routes."""

    @app.get("/")
    async def serve_frontend():
        """Serve the main frontend page."""
        return FileResponse("frontend/index.html")

    @app.get("/chat")
    async def serve_chat():
        """Serve the main chat page."""
        return FileResponse("frontend/chat.html")

    @app.get("/api")
    async def api_root():
        """API root endpoint."""
        return {"status": "ok", "message": "PolyMind API is running"}


# Create the application instance
app = create_app()
